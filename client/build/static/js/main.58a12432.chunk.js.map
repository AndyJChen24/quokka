{"version":3,"sources":["components/Jumbotron/index.js","components/Grid/index.js","components/Form/index.js","components/ActivityFeed/index.js","components/List/index.js","utils/API.js","components/SearchResults/index.js","components/DeleteBtn/index.js","components/UserFavorites/index.js","utils/trefle.js","utils/phzmapi.js","utils/geoip.js","pages/Plants.js","pages/NoMatch.js","components/Footer/index.js","components/SignupLoginModal/styles.js","components/SignupLoginModal/index.js","components/Nav/index.js","App.js","index.js"],"names":["Jumbotron","children","style","height","clear","paddingTop","textAlign","boxShadow","className","Container","fluid","Row","Col","size","split","map","splitSize","join","Input","props","ActivityFeed","data","favorite","key","_id","images","width","src","url","alt","scientific_name","user_name","common_name","List","ListItem","getPlants","axios","get","getPlant","id","deletePlant","delete","savePlant","plantData","post","searchPlantName","searchName","findRecent","plantDetails","plantId","SearchResults","loadPlants","API","then","res","setUserFavorites","catch","err","console","log","showSpinner","searchResults","result","Result","userName","userIp","loadActivityFeed","useState","isFavorite","setIsFavorite","exists","onClick","ip","trefle_id","DeleteBtn","role","tabIndex","UserFavorites","deleteFavorite","favorites","length","plant","getPlantsByMinTemp","temp","getPlantsByName","name","getTemperatureByZipcode","zipcode","getZipCodeByIp","postal","code","Plants","activityData","setActivityData","setSearchResults","searchPlants","setSearchPlants","setShowSpinner","useEffect","border","borderRadius","paddingBottom","Tabs","defaultActiveKey","Tab","eventKey","title","Button","event","preventDefault","phzmapi","minTemp","temperature_range","Trefle","trefleRes","onChange","value","target","placeholder","marginBottom","userFavorites","NoMatch","aria-label","Footer","styleA","color","styleP","fontSize","margin","position","left","bottom","backgroundColor","href","PaddedContainer","styled","EmailSymbol","AiOutlineMail","PasswordSymbol","FiKey","ResponsiveHeader4","MutedSpan","VerticalCenterWrapper","SubmitButton","SignUpLoginForm","email","setEmail","password","setPassword","Form","onSubmit","e","userData","setUserName","Group","controlId","Label","column","xs","sm","Control","type","required","Feedback","Text","Check","setShow","SignupLoginModal","Modal","show","onHide","Header","closeButton","Title","borderBottom","Nav","padding","fontFamily","App","setUserIp","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58a12432.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 200,\n        clear: 'both',\n        paddingTop: 30,\n        textAlign: 'center',\n        boxShadow: '0px 5px 5px 5px #78C2AD',\n      }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nJumbotron.propTypes = {\n  children: PropTypes.any,\n};\n\nexport default Jumbotron;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? '-fluid' : ''}`}>{children}</div>;\n}\n\nContainer.propTypes = {\n  fluid: PropTypes.any,\n  children: PropTypes.any,\n};\n\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? '-fluid' : ''}`}>{children}</div>;\n}\n\nRow.propTypes = {\n  fluid: PropTypes.any,\n  children: PropTypes.any,\n};\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(' ')\n        .map((splitSize) => `col-${splitSize}`)\n        .join(' ')}\n    >\n      {children}\n    </div>\n  );\n}\n\nCol.propTypes = {\n  size: PropTypes.any,\n  children: PropTypes.any,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: 'right', marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n\nFormBtn.propTypes = {\n  children: PropTypes.any,\n};\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport default function ActivityFeed(props) {\n  return (\n    <div>\n      <ul>\n        {props.data.map((favorite) => (\n          <li className='list-overflow-container' key={favorite._id}>\n            {favorite.images[1] && <img width='100%' src={favorite.images[1].url} alt={favorite.scientific_name} />}\n            {favorite.user_name} quokked {favorite.common_name\n              ? favorite.common_name : favorite.scientific_name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nActivityFeed.propTypes = {\n  data: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\nList.propTypes = {\n  children: PropTypes.any,\n};\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\nListItem.propTypes = {\n  children: PropTypes.any,\n};\n","import axios from 'axios';\n\nexport default {\n  // Gets all plants\n  getPlants() {\n    return axios.get('/api/plants');\n  },\n  // Gets the plant with the given id\n  getPlant(id) {\n    return axios.get(`/api/plants/${id}`);\n  },\n  // Deletes the plant with the given id\n  deletePlant(id) {\n    return axios.delete(`/api/plants/${id}`);\n  },\n  // Saves a plant to the database\n  savePlant(plantData) {\n    return axios.post('/api/plants', plantData);\n  },\n  // Searches Trefle through our back end\n  searchPlantName(searchName) {\n    return axios.get(`/api/plants/species/${searchName}`);\n  },\n  // Find recent plants saved to the db\n  findRecent() {\n    return axios.get('/api/plants/recent');\n  },\n  // Get details on a specific plant\n  plantDetails(plantId) {\n    return axios.get(`/api/trefle/species/${plantId}`);\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\nimport { List, ListItem } from '../List';\nimport API from '../../utils/API';\n// import { Spinner } from 'react-bootstrap';\n// import ReactSpinner from 'react-bootstrap-spinner';\n\nexport function SearchResults(props) {\n  function loadPlants() {\n    API.getPlants()\n      .then((res) => {\n        props.setUserFavorites(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"list-overflow-container\">\n      {props.showSpinner\n        && <div>\n          {/* <ReactSpinner type='border' color='primary' size='5' /> */}\n          <p>Loading...</p>\n        </div>\n      }\n      <ul className=\"list-group\">\n        {props.searchResults\n          && props.searchResults.map((result) => (\n            <Result\n              userName={props.userName}\n              userIp={props.userIp}\n              loadActivityFeed={props.loadActivityFeed}\n              loadPlants={loadPlants}\n              result={result}\n              key={result.id}\n            />\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nSearchResults.propTypes = {\n  userName: PropTypes.string,\n  searchResults: PropTypes.array,\n  setUserFavorites: PropTypes.func,\n  loadActivityFeed: PropTypes.func,\n  showSpinner: PropTypes.bool,\n  userIp: PropTypes.string,\n};\n\nexport function Result(props) {\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  function savePlant(plantId) {\n    API.plantDetails(plantId)\n      .then((res) => {\n        res.data.user_name = props.userName;\n        res.data.ip = props.userIp;\n        res.data.trefle_id = res.data.id;\n        API.savePlant(res.data)\n          .then(() => {\n            props.loadPlants();\n            props.loadActivityFeed();\n          });\n      })\n      .catch((err) => err);\n  }\n\n  API.getPlant(props.result.id)\n    .then((res) => {\n      if (res.data.exists) {\n        setIsFavorite(true);\n      } else {\n        setIsFavorite(false);\n      }\n    })\n    .catch((err) => err);\n\n  return (\n    <li className=\"list-group-item\">\n      <List>\n        {props.result.common_name && <ListItem><b>{props.result.common_name}</b></ListItem>}\n        <ListItem>\n          Scientific Name: {props.result.scientific_name}\n        </ListItem>\n      </List>\n      {!isFavorite\n        && <button onClick={() => savePlant(props.result.id)}>Save to Favorites</button>\n      }\n      {isFavorite\n        && <strong>Favorite! This plant is on your list.</strong>\n      }\n    </li>\n  );\n}\n\nResult.propTypes = {\n  userName: PropTypes.string,\n  result: PropTypes.object,\n  loadPlants: PropTypes.func,\n  loadActivityFeed: PropTypes.func,\n  userIp: PropTypes.string,\n};\n","import React from 'react';\nimport './style.css';\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className='delete-btn' {...props} role='button' tabIndex='0'>\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\nimport { List, ListItem } from '../List';\nimport DeleteBtn from '../DeleteBtn';\n\nexport default function UserFavorites({ deleteFavorite, favorites }) {\n  if (favorites.length) {\n    return (\n      <List>\n        {favorites.map((plant) => (\n          <ListItem key={plant.trefle_id}>\n              <p>\n                <strong>\n                {plant.common_name}\n              </strong>\n              </p>\n              <p>\n                {plant.scientific_name}\n              </p>\n            <DeleteBtn onClick={() => deleteFavorite(plant._id)} />\n            <br />\n            {plant.images[0]\n              && <img width=\"300px\" src={plant.images[0].url} alt={plant.scientific_name} />}\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n  return (<h3>No Results to Display</h3>);\n}\n\nUserFavorites.propTypes = {\n  favorites: PropTypes.array,\n  deleteFavorite: PropTypes.func,\n};\n","import axios from 'axios';\n\nexport default {\n  getPlantsByMinTemp(temp) {\n    return axios.get(`/api/trefle/temperature_minimum_deg_f/${temp}`);\n  },\n  getPlantsByName(name) {\n    return axios.get(`/api/trefle/name/${name}`);\n  },\n};\n","import axios from 'axios';\n\nexport default {\n  getTemperatureByZipcode(zipcode) {\n    return axios.get(`/api/phzmapi/${zipcode}`);\n  },\n};\n","import axios from 'axios';\n\nexport default {\n  getZipCodeByIp(ip) {\n    return axios.get(`/api/geoip/${ip}`).postal.code;\n  },\n};\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nimport React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, Button } from 'react-bootstrap'; // Added for navtab effect on \"What should I Plant column\"\nimport PropTypes from 'prop-types';\n\nimport Jumbotron from '../components/Jumbotron';\nimport { Col, Row, Container } from '../components/Grid';\nimport { Input } from '../components/Form';\nimport ActivityFeed from '../components/ActivityFeed';\nimport { SearchResults } from '../components/SearchResults';\nimport UserFavorites from '../components/UserFavorites';\n\nimport API from '../utils/API';\nimport Trefle from '../utils/trefle';\nimport phzmapi from '../utils/phzmapi';\nimport getZipCodeByIp from '../utils/geoip';\n\nfunction Plants(props) {\n  // const [plants, setPlants] = useState([]);\n  const [activityData, setActivityData] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchPlants, setSearchPlants] = useState([]);\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  function loadPlants() {\n    API.getPlants()\n      .then((res) => {\n        // setPlants(res.data);\n        props.setUserFavorites(res.data);\n      })\n      .catch((err) => err);\n  }\n\n  useEffect(() => {\n    loadPlants();\n  });\n\n  function loadActivityFeed() {\n    API.findRecent()\n      .then((res) => setActivityData(res.data))\n      .catch((err) => err);\n  }\n\n  useEffect(() => {\n    loadActivityFeed();\n  }, []);\n\n  /* Run the automatic plant suggestion code on component render */\n  useEffect(() => {\n    // loadSuggestions()\n  });\n\n  function deletePlant(id) {\n    API.deletePlant(id)\n      .then(() => loadPlants())\n      .catch((err) => err);\n  }\n\n  function handleSearchChange(event) {\n    const { value } = event.target;\n    setSearchPlants(value);\n  }\n\n  function loadSuggestions(event) {\n    event.preventDefault();\n    setShowSpinner(true);\n    /* Here is where we need to call GeoIP to figure out the zip code. */\n    // console.log(`User ip address for geoip is ${props.userIp}`);\n    console.log(getZipCodeByIp('73.180.53.30'))\n\n    phzmapi.getTemperatureByZipcode(97203)\n      .then((res) => {\n        const minTemp = res.data.temperature_range.split(' ')[0];\n        Trefle.getPlantsByMinTemp(minTemp)\n          .then((trefleRes) => {\n            setSearchResults(trefleRes.data);\n            setShowSpinner(false);\n          });\n      });\n  }\n\n  function GetPlantsByName(event) {\n    event.preventDefault();\n    setShowSpinner(true);\n    Trefle.getPlantsByName(searchPlants)\n      .then((res) => {\n        setSearchResults(res.data);\n        setShowSpinner(false);\n      });\n  }\n\n  const styleTabs = {\n    border: '3px solid #78C2AD',\n    borderRadius: '10px',\n    textAlign: 'center',\n    boxShadow: '0px 5px 5px 3px #F3969A',\n    paddingBottom: '10px',\n  };\n\n  const styleLi = {\n    marginBottom: '100px',\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        {/* What should I plant column */}\n        <Col size=\"md-5\">\n          <Jumbotron>\n            <h1>What Should I Plant?</h1>\n          </Jumbotron>\n\n          <div style={styleTabs}>\n          <Tabs defaultActiveKey=\"Get Suggestions\">\n            {/* Get Plant Suggestions */}\n            <Tab eventKey=\"Get Suggestions\" title=\"Get Suggestions\">\n            <p>Click the Button to Get Suggestions!</p>\n                <Button onClick={loadSuggestions}>Get Suggestions</Button>\n            </Tab>\n\n            {/* Search By Name */}\n            <Tab eventKey=\"Search By Name\" title=\"Search By Name\">\n              <p>If you&apos;d like to search for a plant by name, you can search here.</p>\n                <Input onChange={handleSearchChange} name=\"searchName\" placeholder=\"Search by Name\" />\n                <Button onClick={GetPlantsByName}>Get Plants By Name</Button>\n            </Tab>\n          </Tabs>\n        </div>\n        <div style={styleLi}>\n          <SearchResults\n            userName={props.userName}\n            userIp={props.userIp}\n            searchResults={searchResults}\n            loadActivityFeed={loadActivityFeed}\n            setUserFavorites={props.setUserFavorites}\n            setShowSpinner={setShowSpinner}\n            showSpinner={showSpinner}\n          />\n        </div>\n      </Col>\n\n      <Col size=\"md-4 sm-12\">\n        <Jumbotron>\n          <h1>Plants On My List</h1>\n        </Jumbotron>\n        <UserFavorites deleteFavorite={deletePlant} favorites={props.userFavorites} />\n      </Col>\n\n      <Col size=\"md-3\">\n        <Jumbotron>\n          <h1>Fav Live Feed</h1>\n        </Jumbotron>\n\n        <ActivityFeed data={activityData}/>\n      </Col>\n\n      </Row>\n    </Container>\n  );\n}\n\nPlants.propTypes = {\n  userFavorites: PropTypes.array,\n  setUserFavorites: PropTypes.func,\n  userName: PropTypes.string,\n  userIp: PropTypes.string,\n};\n\nexport default Plants;\n","import React from 'react';\nimport { Col, Row, Container } from '../components/Grid';\nimport Jumbotron from '../components/Jumbotron';\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\n\nconst Footer = () => {\n  const styleFooter = {\n    position: 'fixed',\n    left: '0',\n    bottom: '0',\n    width: '100%',\n    textAlign: 'center',\n    backgroundColor: '#78C2AD',\n    color: 'cornsilk',\n    boxShadow: '0px 0px 10px 10px pink',\n    height: '40px',\n  };\n  const styleA = {\n    color: 'pink',\n  };\n  const styleP = {\n    fontSize: '10px',\n    margin: '0',\n    paddingTop: '4px',\n  };\n  return (\n    <div style={styleFooter}>\n      <p style={styleP}>Quokka (c) 2020 by Andy J Chen, Ian Johnson, Max Lemieux. Built with <a style={styleA} href=\"https://trefle.io\">Trefle</a></p>\n      <p style={styleP}>This product includes GeoLite2 data created by MaxMind, available from <a style={styleA} href=\"https://www.maxmind.com\">https://www.maxmind.com</a></p>\n    </div>\n  );\n};\n\nexport default Footer;\n","// https://github.com/FBosler/fb-tutorial-social-login/blob/steps/3_backend_1/client/src/components/layout/SignupLoginModal/styles.js\n\nimport styled from 'styled-components';\nimport { Container, Button } from 'react-bootstrap';\n\nimport { AiOutlineMail } from 'react-icons/ai';\nimport { FiKey } from 'react-icons/fi';\n\nexport const PaddedContainer = styled(Container)`\n    padding: 0 25px 25px 25px;\n`;\n\nexport const EmailSymbol = styled(AiOutlineMail)`\n    font-size: 160%;\n`;\n\nexport const PasswordSymbol = styled(FiKey)`\n    font-size: 160%;\n`;\n\nexport const ResponsiveHeader4 = styled('h4')`\n    padding: 20px 0 0 0;\n    font-weight: bolder;\n`;\n\nexport const MutedSpan = styled('span')`\n    font-size: 80%;\n    font-weight: 400;\n`;\n\nexport const VerticalCenterWrapper = styled('div')`\n    height: 100% !important;\n    display: flex;\n    margin-top: -15px;\n    margin-bottom: 15px;\n`;\n\nexport const SubmitButton = styled(Button)`\n    background: #114b74;\n    color: #fff;\n    border-radius: 5px;\n    padding: 5px 20px;\n    margin: auto;\n    -webkit-box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12),\n        0 11px 15px -7px rgba(0, 0, 0, 0.2);\n    box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12),\n        0 11px 15px -7px rgba(0, 0, 0, 0.2);\n    &:hover {\n        background: #1b791e;\n        border-color: white;\n    }\n`;\n","/* eslint-disable arrow-body-style */\n\nimport React, { useState } from 'react';\nimport {\n  Modal,\n  Form,\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport {\n  PaddedContainer,\n  EmailSymbol,\n  PasswordSymbol,\n  ResponsiveHeader4,\n  MutedSpan,\n  VerticalCenterWrapper,\n  SubmitButton,\n} from './styles';\n\nconst SignUpLoginForm = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const userData = {\n      email,\n      password,\n    };\n    axios\n      .post('/api/auth/register_login', userData)\n      .then((res) => {\n        props.setUserName(res.data.email);\n      })\n      .catch((err) => err);\n  };\n\n  return (\n        <Form onSubmit={onSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Row>\n                    <Form.Label column xs=\"2\" sm=\"1\">\n                        <EmailSymbol />\n                    </Form.Label>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Control\n                            type=\"email\"\n                            placeholder=\"Enter email\"\n                            onChange={(e) => {\n                              setEmail(e.target.value);\n                            }}\n                            required\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">We&apos;ll never share your email with anyone else.</Form.Text>\n                    </Col>\n                </Row>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Row>\n                    <Form.Label column xs=\"2\" sm=\"1\">\n                        <PasswordSymbol />\n                    </Form.Label>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Col>\n                </Row>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n                <Row>\n                    <Col xs=\"2\" sm=\"1\">\n                        <Form.Check type=\"checkbox\" />\n                    </Col>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Label>\n                            <MutedSpan>\n                                Yes, please send me occasional updates about the app\n                            </MutedSpan>\n                        </Form.Label>\n                    </Col>\n                </Row>\n            </Form.Group>\n            <VerticalCenterWrapper>\n                <SubmitButton onClick={() => props.setShow(false)} type=\"submit\">Submit</SubmitButton>\n            </VerticalCenterWrapper>\n        </Form>\n  );\n};\n\nSignUpLoginForm.propTypes = {\n  setUserName: PropTypes.func,\n  setShow: PropTypes.func,\n};\n\nconst SignupLoginModal = (props) => {\n  return (\n    <Modal show={props.show} onHide={() => props.setShow(false)}>\n        <Modal.Header closeButton>\n            <Modal.Title>Sign up / Login</Modal.Title>\n        </Modal.Header>\n        <PaddedContainer>\n            <ResponsiveHeader4>With email:</ResponsiveHeader4>\n            <br />\n            <SignUpLoginForm setUserName={props.setUserName} setShow={props.setShow} />\n            <Row style={{ borderBottom: '1px solid #dee2e6' }} />\n        </PaddedContainer>\n    </Modal>\n  );\n};\nSignupLoginModal.propTypes = {\n  show: PropTypes.bool,\n  setShow: PropTypes.func,\n  setUserName: PropTypes.func,\n};\n\nexport default SignupLoginModal;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport SignupLoginModal from '../SignupLoginModal';\n\nconst Nav = (props) => {\n  const [show, setShow] = useState(false);\n\n  const imgStyle = {\n    width: '65px',\n    height: '65px',\n    margin: '0px 10px 25px 0px',\n    position: 'absolute',\n  };\n  const wordStyle = {\n    position: 'relative',\n    padding: '12px 0px 0px 75px',\n    color: 'cornsilk',\n    fontSize: '30px',\n    fontFamily: 'Chalkduster, fantasy',\n  };\n  const navStyle = {\n    boxShadow: '0px 5px 10px 5px pink',\n    marginBottom: '20px',\n  };\n\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\"\n      style= {navStyle}\n      >\n      <a className=\"navbar-brand\" href=\"/\"><img src=\"../img/quokka-logo.png\" alt=\"logo\"style={imgStyle}\n      />\n          <p style={wordStyle}>quokka</p>\n      </a>\n      <p>Welcome, <b>{props.userName}</b></p>\n\n      <SignupLoginModal show={show} setShow={setShow} setUserName={props.setUserName} />\n\n      <div className=\"container\">\n      {props.userName === 'guest'\n        && <button onClick={() => setShow(true)}>Login</button>\n      }\n      {props.userName !== 'guest'\n        && <button onClick={() => axios.get('/api/auth/logout').then(props.setUserName('guest'))}>Logout</button>\n      }\n      </div>\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  userName: PropTypes.string,\n  setUserName: PropTypes.func,\n};\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Plants from './pages/Plants';\nimport NoMatch from './pages/NoMatch';\nimport Footer from './components/Footer';\nimport Nav from './components/Nav';\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [userIp, setUserIp] = useState('');\n  const [userFavorites, setUserFavorites] = useState([]);\n\n  function getUserName() {\n    axios.get('/api/auth/user_data')\n      .then((res) => {\n        if (res.data.email) {\n          setUserName(res.data.email);\n          setUserIp(res.data.ip);\n        } else {\n          setUserName('guest');\n          setUserIp(res.data.ip);\n        }\n      });\n  }\n  useEffect(() => {\n    getUserName();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Nav userName={userName} setUserName={setUserName} />\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Plants\n              userFavorites={userFavorites}\n              setUserFavorites={setUserFavorites}\n              userName={userName}\n              userIp={userIp}\n            />\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}