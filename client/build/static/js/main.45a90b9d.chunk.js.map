{"version":3,"sources":["components/DeleteBtn/index.js","components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","components/Favorites/index.js","components/SearchResults/index.js","utils/trefle.js","utils/phzmapi.js","pages/Plants.js","pages/NoMatch.js","components/Footer/index.js","components/SignupLoginModal/styles.js","components/SignupLoginModal/index.js","components/Nav/index.js","App.js","index.js"],"names":["DeleteBtn","props","className","role","tabIndex","Jumbotron","children","style","height","clear","paddingTop","textAlign","boxShadow","getPlants","axios","get","getPlant","id","deletePlant","delete","savePlant","plantData","post","searchPlantName","searchName","findRecent","plantDetails","plantId","Container","fluid","Row","Col","size","split","map","splitSize","join","List","ListItem","Input","Favorites","data","favorite","key","user_name","scientific_name","SearchResults","loadPlants","API","then","res","setPlants","catch","err","console","log","showSpinner","searchResults","result","Result","userName","userIp","loadFavorites","useState","isFavorite","setIsFavorite","exists","common_name","onClick","ip","trefle_id","getPlantsByMinTemp","temp","getPlantsByName","name","getTemperatureByZipcode","zipcode","Plants","plants","favorites","setFavorites","setSearchResults","searchPlants","setSearchPlants","setShowSpinner","useEffect","border","borderRadius","paddingBottom","Tabs","defaultActiveKey","Tab","eventKey","title","Button","event","preventDefault","phzmapi","minTemp","temperature_range","Trefle","trefleRes","onChange","value","target","placeholder","marginBottom","length","plant","_id","NoMatch","aria-label","Footer","styleP","fontSize","margin","position","left","bottom","width","backgroundColor","color","href","PaddedContainer","styled","EmailSymbol","AiOutlineMail","PasswordSymbol","FiKey","ResponsiveHeader4","MutedSpan","VerticalCenterWrapper","SubmitButton","SignUpLoginForm","email","setEmail","password","setPassword","Form","onSubmit","e","userData","setUserName","Group","controlId","Label","column","xs","sm","Control","type","required","Feedback","Text","Check","setShow","SignupLoginModal","Modal","show","onHide","Header","closeButton","Title","borderBottom","Nav","src","alt","padding","fontFamily","App","setUserIp","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45a90b9d.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className='delete-btn' {...props} role='button' tabIndex='0'>\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 200,\n        clear: 'both',\n        paddingTop: 30,\n        textAlign: 'center',\n        boxShadow: '0px 5px 5px 5px #78C2AD',\n      }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nJumbotron.propTypes = {\n  children: PropTypes.any,\n};\n\nexport default Jumbotron;\n","import axios from 'axios';\n\nexport default {\n  // Gets all plants\n  getPlants() {\n    return axios.get('/api/plants');\n  },\n  // Gets the plant with the given id\n  getPlant(id) {\n    return axios.get(`/api/plants/${id}`);\n  },\n  // Deletes the plant with the given id\n  deletePlant(id) {\n    return axios.delete(`/api/plants/${id}`);\n  },\n  // Saves a plant to the database\n  savePlant(plantData) {\n    return axios.post('/api/plants', plantData);\n  },\n  // Searches Trefle through our back end\n  searchPlantName(searchName) {\n    return axios.get(`/api/plants/species/${searchName}`);\n  },\n  // Find recent plants saved to the db\n  findRecent() {\n    return axios.get('/api/plants/recent');\n  },\n  // Get details on a specific plant\n  plantDetails(plantId) {\n    return axios.get(`/api/trefle/species/${plantId}`);\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? '-fluid' : ''}`}>{children}</div>;\n}\n\nContainer.propTypes = {\n  fluid: PropTypes.any,\n  children: PropTypes.any,\n};\n\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? '-fluid' : ''}`}>{children}</div>;\n}\n\nRow.propTypes = {\n  fluid: PropTypes.any,\n  children: PropTypes.any,\n};\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(' ')\n        .map((splitSize) => `col-${splitSize}`)\n        .join(' ')}\n    >\n      {children}\n    </div>\n  );\n}\n\nCol.propTypes = {\n  size: PropTypes.any,\n  children: PropTypes.any,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\nList.propTypes = {\n  children: PropTypes.any,\n};\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\nListItem.propTypes = {\n  children: PropTypes.any,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: 'right', marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n\nFormBtn.propTypes = {\n  children: PropTypes.any,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport default function Favorites(props) {\n  return (\n    <div>\n      <ul>\n        {props.data.map((favorite) => (\n          <li key={favorite.id}>{favorite.user_name} quokked {favorite.scientific_name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nFavorites.propTypes = {\n  data: PropTypes.object,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\nimport { List, ListItem } from '../List';\nimport API from '../../utils/API';\n// import { Spinner } from 'react-bootstrap';\n// import ReactSpinner from 'react-bootstrap-spinner';\n\nexport function SearchResults(props) {\n  function loadPlants() {\n    API.getPlants()\n      .then((res) => {\n        props.setPlants(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"list-overflow-container\">\n      {props.showSpinner\n        && <div>\n          {/* <ReactSpinner type='border' color='primary' size='5' /> */}\n          <p>Loading...</p>\n        </div>\n      }\n      <ul className=\"list-group\">\n        {props.searchResults.data\n          && props.searchResults.data.map((result) => (\n            <Result\n              userName={props.userName}\n              userIp={props.userIp}\n              loadFavorites={props.loadFavorites}\n              loadPlants={loadPlants}\n              result={result}\n              key={result.id}\n            />\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nSearchResults.propTypes = {\n  userName: PropTypes.array,\n  searchResults: PropTypes.object,\n  setPlants: PropTypes.func,\n  loadFavorites: PropTypes.func,\n  showSpinner: PropTypes.func,\n  userIp: PropTypes.string,\n};\n\nexport function Result(props) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  function savePlant(plantId) {\n    API.plantDetails(plantId)\n      .then((res) => {\n        res.data.user_name = props.userName;\n        res.data.ip = props.userIp;\n        res.data.trefle_id = res.data.id;\n        API.savePlant(res.data)\n          .then(() => {\n            props.loadPlants();\n            props.loadFavorites();\n          });\n      })\n      .catch((err) => err);\n  }\n\n  API.getPlant(props.result.id)\n    .then((res) => {\n      if (res.data.exists) {\n        setIsFavorite(true);\n      } else {\n        setIsFavorite(false);\n      }\n    })\n    .catch((err) => err);\n\n  return (\n    <li className=\"list-group-item\">\n      <List>\n        {props.result.common_name && <ListItem><b>{props.result.common_name}</b></ListItem>}\n        <ListItem>\n          Scientific Name: {props.result.scientific_name}\n        </ListItem>\n      </List>\n      {!isFavorite\n        && <button onClick={() => { savePlant(props.result.id); }}>Save to Favorites</button>\n      }\n      {isFavorite\n        && <strong>Favorite!</strong>\n      }\n    </li>\n  );\n}\n\nResult.propTypes = {\n  userName: PropTypes.array,\n  result: PropTypes.object,\n  loadPlants: PropTypes.func,\n  loadFavorites: PropTypes.func,\n  userIp: PropTypes.string,\n};\n","import axios from 'axios';\n\nexport default {\n  getPlantsByMinTemp(temp) {\n    return axios.get(`/api/trefle/temperature_minimum_deg_f/${temp}`);\n  },\n  getPlantsByName(name) {\n    return axios.get(`/api/trefle/name/${name}`);\n  },\n};\n","import axios from 'axios';\n\nexport default {\n  getTemperatureByZipcode(zipcode) {\n    return axios.get(`/api/phzmapi/${zipcode}`);\n  },\n};\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nimport React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, Button } from 'react-bootstrap'; // Added for navtab effect on \"What should I Plant column\"\nimport PropTypes from 'prop-types';\n\nimport DeleteBtn from '../components/DeleteBtn';\nimport Jumbotron from '../components/Jumbotron';\nimport API from '../utils/API';\n// import { getPostalCode } from \"../utils/geoip\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from '../components/Grid';\nimport { List, ListItem } from '../components/List';\nimport { Input } from '../components/Form';\nimport Favorites from '../components/Favorites';\nimport { SearchResults } from '../components/SearchResults';\n\nimport Trefle from '../utils/trefle';\nimport phzmapi from '../utils/phzmapi';\n\nfunction Plants(props) {\n  const [plants, setPlants] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchPlants, setSearchPlants] = useState([]);\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  function loadPlants() {\n    API.getPlants()\n      .then((res) => setPlants(res.data))\n      .catch((err) => err);\n  }\n\n  useEffect(() => {\n    loadPlants();\n  }, []);\n\n  function loadFavorites() {\n    API.findRecent()\n      .then((res) => setFavorites(res.data))\n      .catch((err) => err);\n  }\n\n  useEffect(() => {\n    loadFavorites();\n  }, []);\n\n  /* Run the automatic plant suggestion code on component render */\n  useEffect(() => {\n    // loadSuggestions()\n  });\n\n  function deletePlant(id) {\n    API.deletePlant(id)\n      .then(() => loadPlants())\n      .catch((err) => err);\n  }\n\n  function handleSearchChange(event) {\n    const { value } = event.target;\n    setSearchPlants(value);\n  }\n\n  function loadSuggestions(event) {\n    event.preventDefault();\n    setShowSpinner(true);\n    /* Here is where we need to call GeoIP to figure out the zip code. */\n    // console.log(`User ip address for geoip is ${props.userIp}`);\n    phzmapi.getTemperatureByZipcode(99518)\n      .then((res) => {\n        const minTemp = res.data.temperature_range.split(' ')[0];\n        Trefle.getPlantsByMinTemp(minTemp)\n          .then((trefleRes) => {\n            setSearchResults(trefleRes);\n            setShowSpinner(false);\n          });\n      });\n  }\n\n  function GetPlantsByName(event) {\n    event.preventDefault();\n    Trefle.getPlantsByName(searchPlants)\n      .then((res) => {\n        setSearchResults(res);\n      });\n  }\n\n  const styleTabs = {\n    border: '3px solid #78C2AD',\n    borderRadius: '10px',\n    textAlign: 'center',\n    boxShadow: '0px 5px 5px 3px #F3969A',\n    paddingBottom: '10px',\n  };\n\n  const styleLi = {\n    marginBottom: '100px',\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        {/* What should I plant column */}\n        <Col size=\"md-5\">\n          <Jumbotron>\n            <h1>What Should I Plant?</h1>\n          </Jumbotron>\n\n          <div style={styleTabs}>\n          <Tabs defaultActiveKey=\"Get Suggestions\">\n            {/* Get Plant Suggestions */}\n            <Tab eventKey=\"Get Suggestions\" title=\"Get Suggestions\">\n            <p>Click the Button to Get Suggestions!</p>\n                <Button onClick={loadSuggestions}>Get Suggestions</Button>\n            </Tab>\n\n            {/* Search By Name */}\n            <Tab eventKey=\"Search By Name\" title=\"Search By Name\">\n              <p>If you&apos;d like to search for a plant by name, you can search here.</p>\n                <Input onChange={handleSearchChange} name=\"searchName\" placeholder=\"Search by Name\" />\n                <Button onClick={GetPlantsByName}>Get Plants By Name</Button>\n            </Tab>\n          </Tabs>\n        </div>\n        <div style={styleLi}>\n          <SearchResults\n            userName={props.userName}\n            userIp={props.userIp}\n            searchResults={searchResults}\n            loadFavorites={loadFavorites}\n            setPlants={setPlants}\n            setShowSpinner={setShowSpinner}\n            showSpinner={showSpinner}\n          />\n        </div>\n      </Col>\n\n        <Col size=\"md-4 sm-12\">\n          <Jumbotron>\n            <h1>Plants On My List</h1>\n          </Jumbotron>\n          {plants.length ? (\n            <List>\n              {plants.map((plant) => (\n                <ListItem key={plant._id}>\n                    <strong>\n                      {plant.scientific_name}\n                    </strong>\n                  <DeleteBtn onClick={() => deletePlant(plant._id)} />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n          {plants.length && props.userName === 'guest' ? (\n            <>\n              <p>Want to view your favorite plants from anywhere?</p>\n              <p>Sign up for an account - it&apos;s always free!</p>\n            </>\n          ) : (<></>\n          )}\n        </Col>\n        <Col size=\"md-3\">\n          <Jumbotron>\n            <h1>Fav Live Feed</h1>\n          </Jumbotron>\n\n          <Favorites data={favorites}/>\n\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nPlants.propTypes = {\n  userName: PropTypes.string,\n  userIp: PropTypes.string,\n};\n\nexport default Plants;\n","import React from 'react';\nimport { Col, Row, Container } from '../components/Grid';\nimport Jumbotron from '../components/Jumbotron';\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\n\nconst Footer = () => {\n  const styleFooter = {\n    position: 'fixed',\n    left: '0',\n    bottom: '0',\n    width: '100%',\n    textAlign: 'center',\n    backgroundColor: '#78C2AD',\n    color: 'cornsilk',\n    boxShadow: '0px 0px 10px 10px pink',\n    height: '40px',\n  };\n  const styleA = {\n    color: 'pink',\n  };\n  const styleP = {\n    fontSize: '10px',\n    margin: '0',\n    paddingTop: '4px',\n  };\n  return (\n    <div style={styleFooter}>\n      <p style={styleP}>Quokka (c) 2020 by Andy J Chen, Ian Johnson, Max Lemieux</p>\n      <p style={styleP}>This product includes GeoLite2 data created by MaxMind, available from <a style ={styleA} href=\"https://www.maxmind.com\">https://www.maxmind.com</a></p>\n      <p style={styleP}>Built with <a href=\"https://trefle.io\">Trefle</a></p>\n    </div>\n  );\n};\n\nexport default Footer;\n","// https://github.com/FBosler/fb-tutorial-social-login/blob/steps/3_backend_1/client/src/components/layout/SignupLoginModal/styles.js\n\nimport styled from 'styled-components';\nimport { Container, Button } from 'react-bootstrap';\n\nimport { AiOutlineMail } from 'react-icons/ai';\nimport { FiKey } from 'react-icons/fi';\n\nexport const PaddedContainer = styled(Container)`\n    padding: 0 25px 25px 25px;\n`;\n\nexport const EmailSymbol = styled(AiOutlineMail)`\n    font-size: 160%;\n`;\n\nexport const PasswordSymbol = styled(FiKey)`\n    font-size: 160%;\n`;\n\nexport const ResponsiveHeader4 = styled('h4')`\n    padding: 20px 0 0 0;\n    font-weight: bolder;\n`;\n\nexport const MutedSpan = styled('span')`\n    font-size: 80%;\n    font-weight: 400;\n`;\n\nexport const VerticalCenterWrapper = styled('div')`\n    height: 100% !important;\n    display: flex;\n    margin-top: -15px;\n    margin-bottom: 15px;\n`;\n\nexport const SubmitButton = styled(Button)`\n    background: #114b74;\n    color: #fff;\n    border-radius: 5px;\n    padding: 5px 20px;\n    margin: auto;\n    -webkit-box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12),\n        0 11px 15px -7px rgba(0, 0, 0, 0.2);\n    box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12),\n        0 11px 15px -7px rgba(0, 0, 0, 0.2);\n    &:hover {\n        background: #1b791e;\n        border-color: white;\n    }\n`;\n","/* eslint-disable arrow-body-style */\n\nimport React, { useState } from 'react';\nimport {\n  Modal,\n  Form,\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport {\n  PaddedContainer,\n  EmailSymbol,\n  PasswordSymbol,\n  ResponsiveHeader4,\n  MutedSpan,\n  VerticalCenterWrapper,\n  SubmitButton,\n} from './styles';\n\nconst SignUpLoginForm = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const userData = {\n      email,\n      password,\n    };\n    axios\n      .post('/api/auth/register_login', userData)\n      .then((res) => {\n        props.setUserName(res.data.email);\n      })\n      .catch((err) => err);\n  };\n\n  return (\n        <Form onSubmit={onSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Row>\n                    <Form.Label column xs=\"2\" sm=\"1\">\n                        <EmailSymbol />\n                    </Form.Label>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Control\n                            type=\"email\"\n                            placeholder=\"Enter email\"\n                            onChange={(e) => {\n                              setEmail(e.target.value);\n                            }}\n                            required\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">We&apos;ll never share your email with anyone else.</Form.Text>\n                    </Col>\n                </Row>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Row>\n                    <Form.Label column xs=\"2\" sm=\"1\">\n                        <PasswordSymbol />\n                    </Form.Label>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Col>\n                </Row>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n                <Row>\n                    <Col xs=\"2\" sm=\"1\">\n                        <Form.Check type=\"checkbox\" />\n                    </Col>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Label>\n                            <MutedSpan>\n                                Yes, please send me occasional updates about the app\n                            </MutedSpan>\n                        </Form.Label>\n                    </Col>\n                </Row>\n            </Form.Group>\n            <VerticalCenterWrapper>\n                <SubmitButton onClick={() => props.setShow(false)} type=\"submit\">Submit</SubmitButton>\n            </VerticalCenterWrapper>\n        </Form>\n  );\n};\n\nSignUpLoginForm.propTypes = {\n  setUserName: PropTypes.func,\n  setShow: PropTypes.func,\n};\n\nconst SignupLoginModal = (props) => {\n  return (\n    <Modal show={props.show} onHide={() => props.setShow(false)}>\n        <Modal.Header closeButton>\n            <Modal.Title>Sign up / Login</Modal.Title>\n        </Modal.Header>\n        <PaddedContainer>\n            <ResponsiveHeader4>With email:</ResponsiveHeader4>\n            <br />\n            <SignUpLoginForm setUserName={props.setUserName} setShow={props.setShow} />\n            <Row style={{ borderBottom: '1px solid #dee2e6' }} />\n        </PaddedContainer>\n    </Modal>\n  );\n};\nSignupLoginModal.propTypes = {\n  show: PropTypes.bool,\n  setShow: PropTypes.func,\n  setUserName: PropTypes.func,\n};\n\nexport default SignupLoginModal;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport SignupLoginModal from '../SignupLoginModal';\n\nconst Nav = (props) => {\n  const [show, setShow] = useState(false);\n\n  const imgStyle = {\n    width: '65px',\n    height: '65px',\n    margin: '0px 10px 25px 0px',\n    position: 'absolute',\n  };\n  const wordStyle = {\n    position: 'relative',\n    padding: '12px 0px 0px 75px',\n    color: 'cornsilk',\n    fontSize: '30px',\n    fontFamily: 'Chalkduster, fantasy',\n  };\n  const navStyle = {\n    boxShadow: '0px 5px 10px 5px pink',\n    marginBottom: '20px',\n  };\n\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\"\n      style= {navStyle}\n      >\n      <a className=\"navbar-brand\" href=\"/\"><img src=\"../img/quokka-logo.png\" alt=\"logo\"style={imgStyle}\n      />\n          <p style={wordStyle}>quokka</p>\n      </a>\n      <p>Welcome, <b>{props.userName}</b></p>\n\n      <SignupLoginModal show={show} setShow={setShow} setUserName={props.setUserName} />\n\n      <div className=\"container\">\n      {props.userName === 'guest'\n        && <button onClick={() => setShow(true)}>Login</button>\n      }\n      {props.userName !== 'guest'\n        && <button onClick={() => axios.get('/api/auth/logout').then(props.setUserName('guest'))}>Logout</button>\n      }\n      </div>\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  userName: PropTypes.string,\n  setUserName: PropTypes.func,\n};\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Plants from './pages/Plants';\nimport NoMatch from './pages/NoMatch';\nimport Footer from './components/Footer';\nimport Nav from './components/Nav';\n\nfunction App() {\n  const [userName, setUserName] = useState('guest');\n  const [userIp, setUserIp] = useState('');\n\n  function getUserName() {\n    axios.get('/api/auth/user_data')\n      .then((res) => {\n        if (res.data.email) {\n          setUserName(res.data.email);\n          setUserIp(res.data.ip);\n        } else {\n          setUserIp(res.data.ip);\n        }\n      });\n  }\n  useEffect(() => {\n    getUserName();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Nav userName={userName} setUserName={setUserName} />\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Plants userName={userName} userIp={userIp} />\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}