{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","components/Form/index.js","components/ActivityFeed/index.js","components/List/index.js","components/Spinner/index.js","components/SearchResults/index.js","components/DeleteBtn/index.js","components/UserFavorites/index.js","utils/trefle.js","utils/phzmapi.js","utils/geoip.js","pages/Plants.js","pages/NoMatch.js","components/Footer/index.js","components/SignupLoginModal/styles.js","components/SignupLoginModal/index.js","components/Nav/index.js","App.js","index.js"],"names":["getPlants","axios","get","getPlant","id","deletePlant","delete","savePlant","plantData","post","searchPlantName","searchName","findRecent","plantDetails","plantId","Jumbotron","children","style","height","clear","paddingTop","textAlign","boxShadow","border","className","Container","fluid","Row","Col","size","split","map","splitSize","join","Input","props","ActivityFeed","paddingInlineStart","data","favorite","key","_id","images","width","src","url","alt","scientific_name","user_name","common_name","List","ListItem","Spinner","viewBox","version","xmlns","xmlnsXlink","d","fill","SearchResults","showSpinner","searchResults","marginTop","userZip","userIp","result","Result","userName","loadActivityFeed","loadFavorites","useState","isFavorite","setIsFavorite","API","then","res","exists","catch","err","margin","onClick","ip","trefle_id","color","padding","icon","DeleteBtn","role","tabIndex","UserFavorites","deleteFavorite","favorites","length","getPlantsByMinTemp","temp","getPlantsByName","name","getTemperatureByZipcode","zipcode","getZipCodeByIp","Plants","activityData","setActivityData","setSearchResults","searchPlants","setSearchPlants","setShowSpinner","useEffect","borderRadius","Tabs","defaultActiveKey","Tab","eventKey","title","Button","event","preventDefault","geoip","geoipRes","zip","postal","code","phzmapi","minTemp","temperature_range","Trefle","trefleRes","setUserZip","maxWidth","marginLeft","onChange","value","target","placeholder","marginBottom","userFavorites","NoMatch","aria-label","Footer","styleA","styleP","fontSize","zIndex","position","left","bottom","backgroundColor","href","PaddedContainer","styled","EmailSymbol","AiOutlineMail","PasswordSymbol","FiKey","ResponsiveHeader4","MutedSpan","VerticalCenterWrapper","SubmitButton","SignUpLoginForm","email","setEmail","password","setPassword","Form","onSubmit","e","userData","setUserName","Group","controlId","Label","column","xs","sm","Control","type","required","Feedback","Text","Check","setShow","SignupLoginModal","Modal","show","onHide","Header","closeButton","Title","borderBottom","Nav","fontFamily","App","setUserIp","setUserFavorites","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.262ca1dc.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default {\n  // Gets all plants\n  getPlants() {\n    return axios.get('/api/plants');\n  },\n  // Gets the plant with the given id\n  getPlant(id) {\n    return axios.get(`/api/plants/${id}`);\n  },\n  // Deletes the plant with the given id\n  deletePlant(id) {\n    return axios.delete(`/api/plants/${id}`);\n  },\n  // Saves a plant to the database\n  savePlant(plantData) {\n    return axios.post('/api/plants', plantData);\n  },\n  // Searches Trefle through our back end\n  searchPlantName(searchName) {\n    return axios.get(`/api/plants/species/${searchName}`);\n  },\n  // Find recent plants saved to the db\n  findRecent() {\n    return axios.get('/api/plants/recent');\n  },\n  // Get details on a specific plant\n  plantDetails(plantId) {\n    return axios.get(`/api/trefle/species/${plantId}`);\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 175,\n        clear: 'both',\n        paddingTop: 30,\n        textAlign: 'center',\n        boxShadow: '0px 5px 5px 3px #F3969A',\n        border: '3px solid #78C2AD',\n      }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nJumbotron.propTypes = {\n  children: PropTypes.any,\n};\n\nexport default Jumbotron;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? '-fluid' : ''}`}>{children}</div>;\n}\n\nContainer.propTypes = {\n  fluid: PropTypes.any,\n  children: PropTypes.any,\n};\n\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? '-fluid' : ''}`}>{children}</div>;\n}\n\nRow.propTypes = {\n  fluid: PropTypes.any,\n  children: PropTypes.any,\n};\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(' ')\n        .map((splitSize) => `col-${splitSize}`)\n        .join(' ')}\n    >\n      {children}\n    </div>\n  );\n}\n\nCol.propTypes = {\n  size: PropTypes.any,\n  children: PropTypes.any,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: 'right', marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n\nFormBtn.propTypes = {\n  children: PropTypes.any,\n};\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport default function ActivityFeed(props) {\n  return (\n    <div>\n      <ul style={{paddingInlineStart: '0px'}}>\n        {props.data.map((favorite) => (\n          <li className='list-overflow-container' key={favorite._id}>\n            {favorite.images[0] && <img width='100%' src={favorite.images[0].url} alt={favorite.scientific_name} />}\n            {favorite.user_name} quokked {favorite.common_name\n              ? favorite.common_name : favorite.scientific_name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nActivityFeed.propTypes = {\n  data: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\nList.propTypes = {\n  children: PropTypes.any,\n};\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\nListItem.propTypes = {\n  children: PropTypes.any,\n};\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nimport React from 'react';\nimport './style.css';\n\nexport default function Spinner() {\n  return (\n    <div className=\"container\">\n      <div className=\"spinner d\">\n        <svg className=\"logo\" width=\"42px\" height=\"27px\" viewBox=\"0 0 42 27\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n          <path d=\"M27.2861584,12.161723 C21.878637,13.1079515 17.6922039,20.3685835 15.4747077,25.1841521 C13.3245071,4.20375459 42,0 42,0 C42,0 37.9221081,28.5085611 15.7102421,26.9373612 L27.2861584,12.161723 Z M9.68859135,25.3642259 L4.07597867,14.6643189 C3.16588397,18.4076368 6.95830724,23.2066496 9.14123129,25.5907604 C-4.2897248,21.7286768 1.04594976,3.21222934 1.04594976,3.21222934 C1.04594976,3.21222934 15.98106,12.9521138 9.68859135,25.3642259 Z\" id=\"\" fill=\"#00ba69\"></path>\n        </svg>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\nimport { List, ListItem } from '../List';\nimport Spinner from '../Spinner';\nimport API from '../../utils/API';\n\nexport function SearchResults(props) {\n  return (\n    <>\n    {props.showSpinner\n      && <div>\n        <Spinner />\n      </div>\n    }\n    {props.searchResults[0]\n        && <div className='list-overflow-container' style={{paddingTop: '20px', marginTop: '30px'}}>  \n      <p>Results for postal code {props.userZip} (autodetected from public IP address {props.userIp})</p>\n      <ul className=\"list-group\">\n        {props.searchResults\n          && props.searchResults.map((result) => (\n            <Result\n              userName={props.userName}\n              userIp={props.userIp}\n              loadActivityFeed={props.loadActivityFeed}\n              loadFavorites={props.loadFavorites}\n              result={result}\n              key={result.id}\n            />\n          ))\n        }\n      </ul>\n    </div>}\n    </>\n  );\n}\n\nSearchResults.propTypes = {\n  userName: PropTypes.string,\n  searchResults: PropTypes.array,\n  loadFavorites: PropTypes.func,\n  loadActivityFeed: PropTypes.func,\n  showSpinner: PropTypes.bool,\n  userIp: PropTypes.string,\n};\n\nexport function Result(props) {\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  function savePlant(plantId) {\n    API.plantDetails(plantId)\n      .then((res) => {\n        res.data.user_name = props.userName;\n        res.data.ip = props.userIp;\n        res.data.trefle_id = res.data.id;\n        API.savePlant(res.data)\n          .then(() => {\n            props.loadFavorites();\n            props.loadActivityFeed();\n          });\n      })\n      .catch((err) => err);\n  }\n\n  API.getPlant(props.result.id)\n    .then((res) => {\n      if (res.data.exists) {\n        setIsFavorite(true);\n      } else {\n        setIsFavorite(false);\n      }\n    })\n    .catch((err) => err);\n\n  return (\n    <li className=\"list-group-item\">\n      <List>\n        {props.result.common_name && <ListItem><b>{props.result.common_name}</b></ListItem>}\n        <ListItem>\n          Scientific Name: {props.result.scientific_name}\n        </ListItem>\n        <div style={{margin: 'auto', paddingTop: '20px'}}>\n        {!isFavorite\n        && <button onClick={() => savePlant(props.result.id)}><i className=\"fa fa-leaf\" style={{color: \"green\", padding: \"5px\"}}icon=\"leaf\"> Save to Favs</i></button>\n      }\n      {isFavorite\n        && <strong>Favorite! This plant is on your list.</strong>\n      }\n      </div>\n      </List>\n      \n      \n    </li>\n  );\n}\n\nResult.propTypes = {\n  userName: PropTypes.string,\n  result: PropTypes.object,\n  loadPlants: PropTypes.func,\n  loadActivityFeed: PropTypes.func,\n  userIp: PropTypes.string,\n};\n","import React from 'react';\nimport './style.css';\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className='delete-btn' {...props} role='button' tabIndex='0'>\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\n// import React, { useRef, useEffect } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\nimport { List, ListItem } from '../List';\nimport DeleteBtn from '../DeleteBtn';\n\nexport default function UserFavorites({ deleteFavorite, favorites }) {\n  // const messagesEndRef = useRef(null);\n  // const scrollToBottom = () => {\n  //   if (messagesEndRef.current) {\n  //     messagesEndRef.current.scrollIntoView({behavior: \"smooth\"});\n  //   }\n  // }\n  /* This works well but needs a fixed height layout to avoid jarring the user */\n  // useEffect(scrollToBottom, [favorites]);\n\n  if (favorites.length) {\n    return (\n      <List>\n        {favorites.map((favorite) => (\n          <ListItem key={favorite.trefle_id}>\n              <p>\n                <strong>\n                {favorite.common_name}\n              </strong>\n              </p>\n              <p>\n                {favorite.scientific_name}\n              </p>\n            <DeleteBtn onClick={() => deleteFavorite(favorite._id)} />\n            <br />\n            {favorite.images[0]\n              && <img width=\"300px\" src={favorite.images[0].url} alt={favorite.scientific_name} />}\n          </ListItem>\n        ))}\n        {/* <div ref={messagesEndRef} /> */}\n      </List>\n    );\n  }\n  return (<h3>No Results to Display</h3>);\n}\n\nUserFavorites.propTypes = {\n  favorites: PropTypes.array,\n  deleteFavorite: PropTypes.func,\n};\n","import axios from 'axios';\n\nexport default {\n  getPlantsByMinTemp(temp) {\n    return axios.get(`/api/trefle/temperature_minimum_deg_f/${temp}`);\n  },\n  getPlantsByName(name) {\n    return axios.get(`/api/trefle/name/${name}`);\n  },\n};\n","import axios from 'axios';\n\nexport default {\n  getTemperatureByZipcode(zipcode) {\n    return axios.get(`/api/phzmapi/${zipcode}`);\n  },\n};\n","import axios from 'axios';\n\nexport default {\n  getZipCodeByIp(ip) {\n    return axios.get(`/api/geoip/${ip}`);\n  },\n};\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nimport React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, Button } from 'react-bootstrap'; // Added for navtab effect on \"What should I Plant column\"\nimport PropTypes from 'prop-types';\n\nimport Jumbotron from '../components/Jumbotron';\nimport { Col, Row, Container } from '../components/Grid';\nimport { Input } from '../components/Form';\nimport ActivityFeed from '../components/ActivityFeed';\nimport { SearchResults } from '../components/SearchResults';\nimport UserFavorites from '../components/UserFavorites';\n\nimport API from '../utils/API';\nimport Trefle from '../utils/trefle';\nimport phzmapi from '../utils/phzmapi';\nimport geoip from '../utils/geoip';\n\nfunction Plants(props) {\n  // const [plants, setPlants] = useState([]);\n  const [activityData, setActivityData] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchPlants, setSearchPlants] = useState([]);\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  function loadActivityFeed() {\n    API.findRecent()\n      .then((res) => setActivityData(res.data))\n      .catch((err) => err);\n  }\n\n  useEffect(() => {\n    loadActivityFeed();\n  }, []);\n\n  function deletePlant(id) {\n    API.deletePlant(id)\n      .then(() => props.loadFavorites())\n      .catch((err) => err);\n  }\n\n  function handleSearchChange(event) {\n    const { value } = event.target;\n    setSearchPlants(value);\n  }\n\n  function loadSuggestions(event) {\n    event.preventDefault();\n    setShowSpinner(true);\n    setSearchResults([]);\n\n    geoip.getZipCodeByIp(props.userIp).then(geoipRes => {\n      let zip = '97201';\n      if (geoipRes.data) {\n        zip = geoipRes.data.postal.code;\n      } \n      phzmapi.getTemperatureByZipcode(zip)\n        .then((res) => {\n          const minTemp = res.data.temperature_range.split(' ')[0];\n          Trefle.getPlantsByMinTemp(minTemp)\n            .then((trefleRes) => {\n              setSearchResults(trefleRes.data);\n              setShowSpinner(false);\n              props.setUserZip(zip);\n            });\n        });\n    });\n  }\n\n  function GetPlantsByName(event) {\n    event.preventDefault();\n    setShowSpinner(true);\n    Trefle.getPlantsByName(searchPlants)\n      .then((res) => {\n        setSearchResults(res.data);\n        setShowSpinner(false);\n      });\n  }\n\n  const styleTabs = {\n    border: '3px solid #78C2AD',\n    borderRadius: '10px',\n    textAlign: 'center',\n    boxShadow: '0px 5px 5px 3px #F3969A',\n    padding: '10px 1px 15px 1px',\n  };\n\n  const styleLi = {\n    marginBottom: '100px',\n  };\n  \n  const styleInput = {\n    maxWidth: \"75%\", \n    marginLeft: \"10%\",\n    border: \"1px solid #78C2AD\"\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        {/* What should I plant column */}\n        <Col size=\"md-5\">\n          <Jumbotron>\n            <h1>What Should I Plant?</h1>\n          </Jumbotron>\n\n          <div style={styleTabs}>\n          <Tabs defaultActiveKey=\"Get Suggestions\">\n            {/* Get Plant Suggestions */}\n            <Tab eventKey=\"Get Suggestions\" title=\"Get Suggestions\">\n            <p style={{paddingTop: \"10px\"}}>Click the Button to Get Suggestions!</p>\n                <Button onClick={loadSuggestions}>Get Suggestions</Button>\n            </Tab>\n\n            {/* Search By Name */}\n            <Tab eventKey=\"Search By Name\" title=\"Search By Name\">\n              <p style={{paddingTop: \"10px\", color: \"#5a5a5\"}}>If you&apos;d like to search for a plant by name, you can search here:</p>\n                <Input style={styleInput} onChange={handleSearchChange} name=\"searchName\" placeholder=\"Search by Name\" />\n                <Button onClick={GetPlantsByName}>Get Plants By Name</Button>\n            </Tab>\n          </Tabs>\n        </div>\n        <div style={styleLi}>\n          <SearchResults\n            userName={props.userName}\n            userIp={props.userIp}\n            userZip={props.userZip}\n            searchResults={searchResults}\n            loadActivityFeed={loadActivityFeed}\n            loadFavorites={props.loadFavorites}\n            setShowSpinner={setShowSpinner}\n            showSpinner={showSpinner}\n          />\n        </div>\n      </Col>\n\n      <Col size=\"md-4 sm-12\">\n        <Jumbotron>\n          <h1>Plants On My List</h1>\n        </Jumbotron>\n        <UserFavorites deleteFavorite={deletePlant} favorites={props.userFavorites} />\n      </Col>\n\n      <Col size=\"md-3\">\n        <Jumbotron>\n          <h1>Fav Live Feed</h1>\n        </Jumbotron>\n\n        <ActivityFeed data={activityData}/>\n      </Col>\n\n      </Row>\n    </Container>\n  );\n}\n\nPlants.propTypes = {\n  userFavorites: PropTypes.array,\n  setUserFavorites: PropTypes.func,\n  userName: PropTypes.string,\n  userIp: PropTypes.string,\n  userZip: PropTypes.string,\n  setUserZip: PropTypes.func,\n};\n\nexport default Plants;\n","import React from 'react';\nimport { Col, Row, Container } from '../components/Grid';\nimport Jumbotron from '../components/Jumbotron';\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\n\nconst Footer = () => {\n  const styleFooter = {\n    zIndex: '10',\n    position: 'fixed',\n    left: '0',\n    bottom: '0',\n    width: '100%',\n    textAlign: 'center',\n    backgroundColor: '#78C2AD',\n    color: 'cornsilk',\n    boxShadow: '0px 0px 10px 10px pink',\n    height: '40px',\n  };\n  const styleA = {\n    color: 'pink',\n  };\n  const styleP = {\n    fontSize: '10px',\n    margin: '0',\n    paddingTop: '4px',\n  };\n  return (\n    <div style={styleFooter}>\n      <p style={styleP}>Quokka (c) 2020 by Andy J Chen, Ian Johnson, Max Lemieux. Built with <a style={styleA} href=\"https://trefle.io\">Trefle</a> and <a style={styleA} href=\"https://github.com/waldoj/frostline\">Frostline</a></p>\n      <p style={styleP}>This product includes GeoLite2 data created by MaxMind, available from <a style={styleA} href=\"https://www.maxmind.com\">https://www.maxmind.com</a></p>\n    </div>\n  );\n};\n\nexport default Footer;\n","// https://github.com/FBosler/fb-tutorial-social-login/blob/steps/3_backend_1/client/src/components/layout/SignupLoginModal/styles.js\n\nimport styled from 'styled-components';\nimport { Container, Button } from 'react-bootstrap';\n\nimport { AiOutlineMail } from 'react-icons/ai';\nimport { FiKey } from 'react-icons/fi';\n\nexport const PaddedContainer = styled(Container)`\n    padding: 0 25px 25px 25px;\n`;\n\nexport const EmailSymbol = styled(AiOutlineMail)`\n    font-size: 160%;\n`;\n\nexport const PasswordSymbol = styled(FiKey)`\n    font-size: 160%;\n`;\n\nexport const ResponsiveHeader4 = styled('h4')`\n    padding: 20px 0 0 0;\n    font-weight: bolder;\n`;\n\nexport const MutedSpan = styled('span')`\n    font-size: 80%;\n    font-weight: 400;\n`;\n\nexport const VerticalCenterWrapper = styled('div')`\n    height: 100% !important;\n    display: flex;\n    margin-top: -15px;\n    margin-bottom: 15px;\n`;\n\nexport const SubmitButton = styled(Button)`\n    background: #114b74;\n    color: #fff;\n    border-radius: 5px;\n    padding: 5px 20px;\n    margin: auto;\n    -webkit-box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12),\n        0 11px 15px -7px rgba(0, 0, 0, 0.2);\n    box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12),\n        0 11px 15px -7px rgba(0, 0, 0, 0.2);\n    &:hover {\n        background: #1b791e;\n        border-color: white;\n    }\n`;\n","/* eslint-disable arrow-body-style */\n\nimport React, { useState } from 'react';\nimport {\n  Modal,\n  Form,\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport {\n  PaddedContainer,\n  EmailSymbol,\n  PasswordSymbol,\n  ResponsiveHeader4,\n  MutedSpan,\n  VerticalCenterWrapper,\n  SubmitButton,\n} from './styles';\n\nconst SignUpLoginForm = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const userData = {\n      email,\n      password,\n    };\n    axios\n      .post('/api/auth/register_login', userData)\n      .then((res) => {\n        props.setUserName(res.data.email);\n      })\n      .catch((err) => err);\n  };\n\n  return (\n        <Form onSubmit={onSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Row>\n                    <Form.Label column xs=\"2\" sm=\"1\">\n                        <EmailSymbol />\n                    </Form.Label>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Control\n                            type=\"email\"\n                            placeholder=\"Enter email\"\n                            onChange={(e) => {\n                              setEmail(e.target.value);\n                            }}\n                            required\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">We&apos;ll never share your email with anyone else.</Form.Text>\n                    </Col>\n                </Row>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Row>\n                    <Form.Label column xs=\"2\" sm=\"1\">\n                        <PasswordSymbol />\n                    </Form.Label>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Col>\n                </Row>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n                <Row>\n                    <Col xs=\"2\" sm=\"1\">\n                        <Form.Check type=\"checkbox\" />\n                    </Col>\n                    <Col xs=\"10\" sm=\"11\">\n                        <Form.Label>\n                            <MutedSpan>\n                                Yes, please send me occasional updates about the app\n                            </MutedSpan>\n                        </Form.Label>\n                    </Col>\n                </Row>\n            </Form.Group>\n            <VerticalCenterWrapper>\n                <SubmitButton onClick={() => props.setShow(false)} type=\"submit\">Submit</SubmitButton>\n            </VerticalCenterWrapper>\n        </Form>\n  );\n};\n\nSignUpLoginForm.propTypes = {\n  setUserName: PropTypes.func,\n  setShow: PropTypes.func,\n};\n\nconst SignupLoginModal = (props) => {\n  return (\n    <Modal show={props.show} onHide={() => props.setShow(false)}>\n        <Modal.Header closeButton>\n            <Modal.Title>Sign up / Login</Modal.Title>\n        </Modal.Header>\n        <PaddedContainer>\n            <ResponsiveHeader4>With email:</ResponsiveHeader4>\n            <br />\n            <SignUpLoginForm setUserName={props.setUserName} setShow={props.setShow} />\n            <Row style={{ borderBottom: '1px solid #dee2e6' }} />\n        </PaddedContainer>\n    </Modal>\n  );\n};\nSignupLoginModal.propTypes = {\n  show: PropTypes.bool,\n  setShow: PropTypes.func,\n  setUserName: PropTypes.func,\n};\n\nexport default SignupLoginModal;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport SignupLoginModal from '../SignupLoginModal';\n\nconst Nav = (props) => {\n  const [show, setShow] = useState(false);\n\n  const imgStyle = {\n    width: '65px',\n    height: '65px',\n    margin: '0px 10px 25px 0px',\n    position: 'absolute',\n  };\n  const wordStyle = {\n    position: 'relative',\n    padding: '12px 0px 0px 75px',\n    color: 'cornsilk',\n    fontSize: '30px',\n    fontFamily: 'Chalkduster, fantasy',\n  };\n  const navStyle = {\n    boxShadow: '0px 5px 10px 5px pink',\n    marginBottom: '30px',\n  };\n  const styleLogin = {\n    position: \"absolute\",\n    left: \"85%\",\n    textAlign: \"center\"\n  }\n\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\"\n      style= {navStyle}\n      >\n      <a className=\"navbar-brand\" href=\"/\"><img src=\"../img/quokka-logo.png\" alt=\"logo\"style={imgStyle}\n      />\n          <p style={wordStyle}>quokka</p>\n      </a>\n\n      <div style={styleLogin}>\n      <p>Welcome, <b>{props.userName}</b></p>\n      <SignupLoginModal show={show} setShow={setShow} setUserName={props.setUserName} />\n      {props.userName === 'guest'\n        && <button onClick={() => setShow(true)}>Login</button>\n      }\n      {props.userName !== 'guest'\n        && <button onClick={() => axios.get('/api/auth/logout').then(props.setUserName('guest'))}>Logout</button>\n      }\n      </div>\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  userName: PropTypes.string,\n  setUserName: PropTypes.func,\n};\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport API from './utils/API';\n\nimport Plants from './pages/Plants';\nimport NoMatch from './pages/NoMatch';\nimport Footer from './components/Footer';\nimport Nav from './components/Nav';\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [userIp, setUserIp] = useState('');\n  const [userZip, setUserZip] = useState('');\n  const [userFavorites, setUserFavorites] = useState([]);\n\n  function getUserName() {\n    axios.get('/api/auth/user_data')\n      .then((res) => {\n        if (res.data.email) {\n          setUserName(res.data.email);\n          setUserIp(res.data.ip);\n        } else {\n          setUserName('guest');\n          setUserIp(res.data.ip);\n        }\n      });\n  }\n  useEffect(() => {\n    getUserName();\n  }, []);\n\n  function loadFavorites() {\n    API.getPlants()\n      .then((res) => {\n        setUserFavorites(res.data);\n      })\n      .catch((err) => err);\n  }\n  useEffect(() => {\n    loadFavorites();\n  }, [userName])\n\n\n  return (\n    <BrowserRouter>\n      <Nav userName={userName} setUserName={setUserName} />\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Plants\n              userFavorites={userFavorites}\n              loadFavorites={loadFavorites}\n              userName={userName}\n              userIp={userIp}\n              userZip={userZip}\n              setUserZip={setUserZip}\n            />\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}